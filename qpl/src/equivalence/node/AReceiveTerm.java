/* This file was generated by SableCC (http://www.sablecc.org/). */

package equivalence.node;

import equivalence.analysis.*;

@SuppressWarnings("nls")
public final class AReceiveTerm extends PTerm
{
    private TReceive _receive_;
    private TId _data_;
    private TOn _on_;
    private TId _channel_;
    private PSep _sep_;
    private PTerm _term_;

    public AReceiveTerm()
    {
        // Constructor
    }

    public AReceiveTerm(
        @SuppressWarnings("hiding") TReceive _receive_,
        @SuppressWarnings("hiding") TId _data_,
        @SuppressWarnings("hiding") TOn _on_,
        @SuppressWarnings("hiding") TId _channel_,
        @SuppressWarnings("hiding") PSep _sep_,
        @SuppressWarnings("hiding") PTerm _term_)
    {
        // Constructor
        setReceive(_receive_);

        setData(_data_);

        setOn(_on_);

        setChannel(_channel_);

        setSep(_sep_);

        setTerm(_term_);

    }

    @Override
    public Object clone()
    {
        return new AReceiveTerm(
            cloneNode(this._receive_),
            cloneNode(this._data_),
            cloneNode(this._on_),
            cloneNode(this._channel_),
            cloneNode(this._sep_),
            cloneNode(this._term_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAReceiveTerm(this);
    }

    public TReceive getReceive()
    {
        return this._receive_;
    }

    public void setReceive(TReceive node)
    {
        if(this._receive_ != null)
        {
            this._receive_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._receive_ = node;
    }

    public TId getData()
    {
        return this._data_;
    }

    public void setData(TId node)
    {
        if(this._data_ != null)
        {
            this._data_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._data_ = node;
    }

    public TOn getOn()
    {
        return this._on_;
    }

    public void setOn(TOn node)
    {
        if(this._on_ != null)
        {
            this._on_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._on_ = node;
    }

    public TId getChannel()
    {
        return this._channel_;
    }

    public void setChannel(TId node)
    {
        if(this._channel_ != null)
        {
            this._channel_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._channel_ = node;
    }

    public PSep getSep()
    {
        return this._sep_;
    }

    public void setSep(PSep node)
    {
        if(this._sep_ != null)
        {
            this._sep_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._sep_ = node;
    }

    public PTerm getTerm()
    {
        return this._term_;
    }

    public void setTerm(PTerm node)
    {
        if(this._term_ != null)
        {
            this._term_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._term_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._receive_)
            + toString(this._data_)
            + toString(this._on_)
            + toString(this._channel_)
            + toString(this._sep_)
            + toString(this._term_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._receive_ == child)
        {
            this._receive_ = null;
            return;
        }

        if(this._data_ == child)
        {
            this._data_ = null;
            return;
        }

        if(this._on_ == child)
        {
            this._on_ = null;
            return;
        }

        if(this._channel_ == child)
        {
            this._channel_ = null;
            return;
        }

        if(this._sep_ == child)
        {
            this._sep_ = null;
            return;
        }

        if(this._term_ == child)
        {
            this._term_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._receive_ == oldChild)
        {
            setReceive((TReceive) newChild);
            return;
        }

        if(this._data_ == oldChild)
        {
            setData((TId) newChild);
            return;
        }

        if(this._on_ == oldChild)
        {
            setOn((TOn) newChild);
            return;
        }

        if(this._channel_ == oldChild)
        {
            setChannel((TId) newChild);
            return;
        }

        if(this._sep_ == oldChild)
        {
            setSep((PSep) newChild);
            return;
        }

        if(this._term_ == oldChild)
        {
            setTerm((PTerm) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
