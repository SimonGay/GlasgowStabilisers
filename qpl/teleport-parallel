// The first process is an EPR source, which constructs an EPR pair
// and sends the qubits on channels EPRtoA and EPRtoB.
// Alice will receive on EPRtoA, Bob will receive on EPRtoB.

// EPR source
newqubit y ;             // A fresh qubit in state |0> 
newqubit z ;             // Another fresh qubit in state |0>
H(y) ;                   // Apply Hadamard to put y into state |0> + |1>
CNOT(y,z) ;              // Apply Controlled Not, to entangle y and z: state |00> + |11>
(
send y on EPRtoA ; nil   // Send qubit y on channel EPRtoA
|
send z on EPRtoB ; nil   // Send qubit z on channel EPRtoB
)

|

// The next process is Alice, who inputs an unknown qubit and 
// teleports it to Bob.
// Alice receives her part of the EPR pair on channel EPRtoA.
// Alice uses channel AtoB for classical communication, sending measurement
// results to Bob.

// Alice

(
input x ;       
receive y on EPRtoA ;           
CNOT(x,y) ;     
H(x) ;  
(        
m := measure x ; send m on AtoBm ; nil
|
n := measure y ; send n on AtoBn ; nil
)

|

// The next process is Bob, who receives classical data from Alice
// and uses it to transform his part of the EPR pair, in order to
// recover the original unknown qubit that Alice had.

// Bob

receive z on EPRtoB ;    // Receive part of the EPR pair on channel EPRtoB
receive m on AtoBm ;      // Receive first classical bit from Alice on channel AtoB
receive n on AtoBn ;      // Receive second classical bit from Alice on channel AtoB
if n then X(z) ;         // These two steps are the conditional transformations
if m then Z(z) ;         // of Bob's part of the EPR pair, based on the classical data.
output z ;               // Announce the recovered qubit
nil                      // Stop
)




